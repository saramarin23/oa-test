{"version":3,"sources":["images/search.png","images/landscape.png","components/Header.js","components/Filter.js","components/CityItem.js","components/Cities.js","components/SelectedItem.js","components/SelectedCities.js","components/App.js","index.js"],"names":["module","exports","Header","Filter","props","query","getQuery","className","alt","src","SearchIcon","placeholder","type","name","onChange","value","City","image","metadata","Cities","cities","selectCity","handleChange","filteredCities","filter","filteredCity","toLowerCase","includes","onClick","length","map","city","key","id","chineseName","SelectedItem","SelectedCities","action","favs","App","state","selectAllCities","items","loadingState","getCities","bind","resetFavs","this","fetch","then","response","json","data","setState","event","queryValue","currentTarget","e","persist","selectedCity","indexOf","index","newFavorite","splice","prevState","forceUpdate","s","favCities","allCities","target","checked","push","allChecked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29024239.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.445f2174.png\";","module.exports = __webpack_public_path__ + \"static/media/landscape.69e6b7ac.png\";","import React from \"react\";\n\nconst Header = () => {\n  return <h1>Cities of China</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport SearchIcon from \"../images/search.png\";\n\nconst Filter = props => {\n  const { query, getQuery } = props;\n  return (\n    <div className=\"filter-container\">\n      <img className=\"search-image\" alt=\"search-icon\" src={SearchIcon} />\n      <input\n        className=\"query-input\"\n        placeholder=\"Search by name\"\n        type=\"search\"\n        name=\"filter\"\n        onChange={getQuery}\n        value={query}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport image from \"../images/landscape.png\";\n\nconst City = props => {\n  return (\n    <div className=\"city-details-container\">\n      <div>\n        <img className=\"image\" alt=\"mountain\" src={image} />\n      </div>\n      <div>\n        <p className=\"city-name\">{props.name}</p>\n        <p className=\"metadata\">{props.metadata}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default City;\n","import React from \"react\";\nimport Filter from \"./Filter\";\nimport City from \"./CityItem\";\n\nconst Cities = props => {\n  const { cities, query, getQuery, selectCity, handleChange } = props;\n  const filteredCities = cities.filter(filteredCity =>\n    filteredCity.name.toLowerCase().includes(query.toLowerCase())\n  );\n  return (\n    <div className=\"left-panel\">\n      <Filter query={query} getQuery={getQuery} />\n      <div className=\"total-items\">\n        <input\n          className=\"select-all_input\"\n          value=\"checkAll\"\n          type=\"checkbox\"\n          onClick={handleChange}\n        />\n        <p>{filteredCities.length} items</p>\n      </div>\n      <ul className=\"cities\">\n        {filteredCities.map(city => {\n          return (\n            <li\n              className=\"city-container\"\n              key={city.id}\n              value={city.id}\n              metadata={city.metadata}\n            >\n              <input type=\"checkbox\" value={city.id} onChange={selectCity} />\n              <City name={city.name} id={city.id} metadata={city.chineseName} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cities;\n","import React from \"react\";\nimport City from \"./CityItem\";\n\nconst SelectedItem = props => {\n  return <City name={props.city} />;\n};\n\nexport default SelectedItem;\n","import React from \"react\";\nimport SelectedItem from \"./SelectedItem\";\n\nconst SelectedCities = props => {\n  let { action, favs } = props;\n  return (\n    <div className=\"right-panel\">\n      <div>\n        <div className=\"right-header\">\n          <p>{favs.length} items</p>\n          <button className=\"clear-button\" onClick={action}>\n            CLEAR\n          </button>\n        </div>\n        <ul className=\"selected-list\">\n          {favs.map(city => {\n            return (\n              <li key={city}>\n                <SelectedItem city={city} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedCities;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Cities from \"./Cities\";\nimport SelectedCities from \"./SelectedCities\";\nimport \"../stylesheets/App.scss\";\n\nconst citiesData = \"./services/cities-of-china.json\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: \"\",\n      favs: [],\n      selectAllCities: false,\n      cities: [],\n      items: 20,\n      loadingState: false\n    };\n    this.getCities = this.getCities.bind(this);\n    this.getQuery = this.getQuery.bind(this);\n    this.selectCity = this.selectCity.bind(this);\n    this.resetFavs = this.resetFavs.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCities();\n  }\n\n  getCities() {\n    fetch(citiesData)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ cities: data.cities });\n      });\n  }\n\n  getQuery(event) {\n    const queryValue = event.currentTarget.value;\n    this.setState({\n      query: queryValue\n    });\n  }\n\n  selectCity(e) {\n    e.persist();\n    const selectedCity = e.currentTarget.value;\n    if (selectedCity === \"all\") {\n      this.setState({ favs: [\"all\"] });\n    } else {\n      if (this.state.favs.indexOf(selectedCity) > -1) {\n        const index = this.state.favs.indexOf(selectedCity);\n        const newFavorite = [...this.state.favs];\n        newFavorite.splice(index, 1);\n        this.setState({ favs: newFavorite });\n      } else {\n        this.setState(prevState => ({\n          favs: [...prevState.favs, selectedCity]\n        }));\n      }\n    }\n  }\n\n  resetFavs() {\n    this.forceUpdate();\n    this.setState({\n      favs: [],\n      selectAllCities: false\n    });\n  }\n\n  loadMoreCities() {\n    this.setState({ loadingState: true });\n  }\n\n  handleChange(e, s) {\n    e.persist();\n    const favCities = this.state.favs;\n    const allCities = [...this.state.cities];\n    if (e.target.checked) {\n      favCities.push(allCities);\n    }\n  }\n\n  render() {\n    const { cities, query, items, loadingState, favs, allChecked } = this.state;\n    return (\n      <div className=\"App\">\n        <main>\n          <Header />\n          <main className=\"App-container\">\n            <Cities\n              cities={cities}\n              checked={allChecked}\n              selectCity={this.selectCity}\n              items={items}\n              loadingState={loadingState}\n              query={query}\n              getQuery={this.getQuery}\n              handleChange={this.handleChange}\n            />\n            <SelectedCities\n              action={this.resetFavs}\n              cities={cities}\n              favs={favs}\n            />\n          </main>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}